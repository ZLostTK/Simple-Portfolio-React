name: CI/CD - Lint, Test & Deploy

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run ESLint
        run: pnpm exec eslint . --ext .js,.ts,.tsx

      - name: Run Prettier check
        run: pnpm exec prettier --check "src/**/*.{ts,tsx}"

      - name: Run TypeScript check
        run: pnpm exec tsc --noEmit

      - name: Build application
        run: pnpm run build:gh-pages

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.node-version }}
          path: dist

  deploy-github-pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: lint-and-test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    permissions:
      contents: read
      pages: write
      id-token: write
      actions: read

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build application
        run: pnpm run build:gh-pages

      - name: Check Pages configuration
        run: |
          echo "Checking GitHub Pages configuration..."
          echo "Repository: ${{ github.repository }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Event: ${{ github.event_name }}"

      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          enablement: true
        continue-on-error: true

      - name: Upload to GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'
        continue-on-error: true

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        continue-on-error: true

      - name: Check deployment status
        run: |
          if [ "${{ steps.deployment.outcome }}" == "success" ]; then
            echo "✅ GitHub Pages deployment successful"
            echo "URL: ${{ steps.deployment.outputs.page_url }}"
          else
            echo "⚠️ GitHub Pages deployment failed or skipped"
            echo "This is normal if Pages is not enabled for this repository"
          fi
